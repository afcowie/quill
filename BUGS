BUGS

Build
=====

Make does too much
------------------

For some reason `make test` is actually rebuilding everything.


Internal
========

Need an offset cache
--------------------

The data structure used to back a TextChain is a mutable linked list; that's
fine for arbitrary insertions, but our real need is to find Spans at given
offsets and to break Spans (creating boundaries) at given offsets.

This was fine for preliminary implementation, but with the addition of spell
checking we have probably hit O(nÂ²) or worse when it comes to driving down
splices as we iterate create Span boundaries at word beginnings and endings.

Undo stack is unbounded
-----------------------

The undo stack is a LinkedList right now; nothing is acting to constrain its
size or clean off older entries. Unlimited undo steps is cool; unconstrained
memory consumption until exhaustion is not.

Making it WeakReference doesn't quite seem sufficient; we can't have items
arbitrarily disappearing. Perhaps an ArrayDequeue?


Caching result of render
------------------------

Right now the PreviewWidget's ExposeEvent runs the entire RenderEngine; we
need to cache the result and only update the result of processing Segments
into Areas and Pages if the current Change object is no longer the same as
that when the render happened.


<!--

  Copyright (c) 2009 Operational Dynamics Consulting Pty Ltd 

  As project documentation, this file forms an integral part of the source
  code of the program it accompanies, and thus is made available to you by its
  authors under the terms of the "GNU General Public Licence, version 2". See
  the LICENCE file for the terms governing usage, copying and redistribution.

  vim: set textwidth=78 nowrap:

-->
